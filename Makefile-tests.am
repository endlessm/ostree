# Makefile for tests code
#
# Copyright (C) 2013 Colin Walters <walters@verbum.org>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

include $(top_srcdir)/buildutil/glib-tap.mk

EXTRA_DIST += \
	buildutil/tap-driver.sh \
	buildutil/tap-test \
	tests/glib.supp \
	tests/ostree.supp \
	$(NULL)

# We should probably consider flipping the default for DEBUG.  Also,
# include the builddir in $PATH so we find our just-built ostree
# binary.
TESTS_ENVIRONMENT += OT_TESTS_DEBUG=1 \
	GI_TYPELIB_PATH=$$(cd $(top_builddir) && pwd) \
	LD_LIBRARY_PATH=$$(cd $(top_builddir)/.libs && pwd) \
	PATH=$$(cd $(top_builddir)/tests && pwd):$${PATH} \
	$(NULL)

uninstalled_test_data = tests/ostree-symlink-stamp tests/ostree-prepare-root-symlink-stamp \
			tests/ostree-remount-symlink-stamp tests/rofiles-fuse-symlink-stamp

dist_uninstalled_test_scripts = tests/test-symbols.sh

dist_test_scripts = \
	tests/test-basic.sh \
	tests/test-pull-subpath.sh \
	tests/test-archivez.sh \
	tests/test-remote-add.sh \
	tests/test-remote-cookies.sh \
	tests/test-remote-gpg-import.sh \
	tests/test-commit-sign.sh \
	tests/test-export.sh \
	tests/test-help.sh \
	tests/test-libarchive.sh \
	tests/test-parent.sh \
	tests/test-pull-archive-z.sh \
	tests/test-pull-commit-only.sh \
	tests/test-pull-corruption.sh \
	tests/test-pull-depth.sh \
	tests/test-pull-mirror-summary.sh \
	tests/test-pull-large-metadata.sh \
	tests/test-pull-metalink.sh \
	tests/test-pull-summary-sigs.sh \
	tests/test-pull-resume.sh \
	tests/test-pull-repeated.sh \
	tests/test-pull-untrusted.sh \
	tests/test-pull-override-url.sh \
	tests/test-local-pull.sh \
	tests/test-local-pull-depth.sh \
	tests/test-gpg-signed-commit.sh \
	tests/test-admin-upgrade-unconfigured.sh \
	tests/test-admin-deploy-syslinux.sh \
	tests/test-admin-deploy-2.sh \
	tests/test-admin-deploy-karg.sh \
	tests/test-admin-deploy-switch.sh \
	tests/test-admin-deploy-etcmerge-cornercases.sh \
	tests/test-admin-deploy-uboot.sh \
	tests/test-admin-deploy-grub2.sh \
	tests/test-admin-deploy-bootid-gc.sh \
	tests/test-admin-instutil-set-kargs.sh \
	tests/test-admin-upgrade-not-backwards.sh \
	tests/test-admin-pull-deploy-commit.sh \
	tests/test-admin-locking.sh \
	tests/test-admin-deploy-clean.sh \
	tests/test-repo-checkout-subpath.sh	\
	tests/test-reset-nonlinear.sh \
	tests/test-oldstyle-partial.sh \
	tests/test-delta.sh \
	tests/test-xattrs.sh \
	tests/test-auto-summary.sh \
	tests/test-prune.sh \
	tests/test-refs.sh \
	tests/test-demo-buildsystem.sh \
	tests/test-switchroot.sh \
	tests/test-pull-contenturl.sh \
	tests/test-pull-mirrorlist.sh \
	$(NULL)

if BUILDOPT_FUSE
dist_test_scripts += tests/test-rofiles-fuse.sh
else
EXTRA_DIST += tests/test-rofiles-fuse.sh
endif

# This one uses corrupt-repo-ref.js
js_tests = tests/test-corruption.sh
if BUILDOPT_GJS
dist_test_scripts += tests/test-corruption.sh
else
EXTRA_DIST += $(js_tests)
endif

dist_installed_test_data = tests/archive-test.sh \
	tests/pull-test.sh \
	tests/libtest.sh \
	tests/admin-test.sh \
	tests/basic-test.sh \
	tests/test-basic-user.sh \
	tests/corrupt-repo-ref.js \
	tests/pre-endian-deltas-repo-big.tar.xz \
	tests/pre-endian-deltas-repo-little.tar.xz \
	$(NULL)

dist_test_extra_scripts = tests/bootloader-entries-crosscheck.py \
     tests/ostree-grub-generator

# We can't use nobase_ as we need to strip off the tests/, can't
# use plain installed_ as we do need the gpghome/ prefix.
if ENABLE_INSTALLED_TESTS
gpginsttestdir = $(installed_testdir)/gpghome
dist_gpginsttest_DATA = tests/gpghome/secring.gpg \
	tests/gpghome/pubring.gpg \
	tests/gpghome/trustdb.gpg \
	tests/gpghome/key1.asc \
	tests/gpghome/key2.asc \
	tests/gpghome/key3.asc
gpginsttest_trusteddir = $(installed_testdir)/gpghome/trusted
dist_gpginsttest_trusted_DATA = tests/gpghome/trusted/pubring.gpg

gpgvinsttestdir = $(installed_testdir)/gpg-verify-data
dist_gpgvinsttest_DATA = $(addprefix tests/gpg-verify-data/, \
	gpg.conf lgpl2 lgpl2.sig pubring.gpg secring.gpg trustdb.gpg)
endif

js_installed_tests = \
	tests/test-core.js \
	tests/test-sizes.js \
	tests/test-sysroot.js \
	$(NULL)

if BUILDOPT_GJS
dist_installed_test_scripts = $(js_installed_tests)
else
EXTRA_DIST += $(js_installed_tests)
endif

test_ltlibraries = libreaddir-rand.la
libreaddir_rand_la_SOURCES = tests/readdir-rand.c
libreaddir_rand_la_CFLAGS = $(AM_CFLAGS) $(OT_INTERNAL_GIO_UNIX_CFLAGS)
libreaddir_rand_la_LIBADD = \
	-ldl \
	$(OT_INTERNAL_GIO_UNIX_LIBS) \
	$(NULL)
libreaddir_rand_la_LDFLAGS = $(AM_LDFLAGS) -avoid-version
if !ENABLE_INSTALLED_TESTS
libreaddir_rand_la_LDFLAGS += -rpath $(abs_builddir)
endif

test_programs = tests/test-varint tests/test-ot-unix-utils tests/test-bsdiff tests/test-mutable-tree \
	tests/test-keyfile-utils tests/test-ot-opt-utils tests/test-ot-tool-util \
	tests/test-gpg-verify-result tests/test-checksum tests/test-lzma tests/test-rollsum \
	tests/test-basic-c tests/test-sysroot-c tests/test-pull-c

# An interactive tool
noinst_PROGRAMS += tests/test-rollsum-cli

if USE_LIBARCHIVE
test_programs += tests/test-libarchive-import
endif

common_tests_cflags = $(ostree_bin_shared_cflags) $(OT_INTERNAL_GIO_UNIX_CFLAGS) -I$(srcdir)/libglnx
common_tests_ldadd = $(ostree_bin_shared_ldadd) $(OT_INTERNAL_GIO_UNIX_LIBS)

noinst_LTLIBRARIES += libostreetest.la
libostreetest_la_SOURCES = tests/libostreetest.c
libostreetest_la_CFLAGS = $(common_tests_cflags) -I $(srcdir)/tests
libostreetest_la_LIBADD = $(common_tests_ldadd)

TESTS_CFLAGS = $(common_tests_cflags)
TESTS_LDADD = $(common_tests_ldadd) libostreetest.la

tests_test_rollsum_cli_SOURCES = src/libostree/ostree-rollsum.c tests/test-rollsum-cli.c
tests_test_rollsum_cli_CFLAGS = $(TESTS_CFLAGS) $(OT_DEP_ZLIB_CFLAGS)
tests_test_rollsum_cli_LDADD = libbupsplit.la $(TESTS_LDADD) $(OT_DEP_ZLIB_LIBS)

tests_test_rollsum_SOURCES = src/libostree/ostree-rollsum.c tests/test-rollsum.c
tests_test_rollsum_CFLAGS = $(TESTS_CFLAGS) $(OT_DEP_ZLIB_CFLAGS)
tests_test_rollsum_LDADD = libbupsplit.la $(TESTS_LDADD) $(OT_DEP_ZLIB_LIBS)

tests_test_mutable_tree_CFLAGS = $(TESTS_CFLAGS)
tests_test_mutable_tree_LDADD = $(TESTS_LDADD)

tests_test_basic_c_CFLAGS = $(TESTS_CFLAGS)
tests_test_basic_c_LDADD = $(TESTS_LDADD)

tests_test_sysroot_c_CFLAGS = $(TESTS_CFLAGS)
tests_test_sysroot_c_LDADD = $(TESTS_LDADD)

tests_test_pull_c_CFLAGS = $(TESTS_CFLAGS)
tests_test_pull_c_LDADD = $(TESTS_LDADD)

tests_test_ot_unix_utils_CFLAGS = $(TESTS_CFLAGS)
tests_test_ot_unix_utils_LDADD = $(TESTS_LDADD)

tests_test_varint_SOURCES = src/libostree/ostree-varint.c tests/test-varint.c
tests_test_varint_CFLAGS = $(TESTS_CFLAGS)
tests_test_varint_LDADD = $(TESTS_LDADD)

tests_test_bsdiff_CFLAGS = $(TESTS_CFLAGS)
tests_test_bsdiff_LDADD = libbsdiff.la $(TESTS_LDADD)

tests_test_checksum_SOURCES = src/libostree/ostree-core.c tests/test-checksum.c
tests_test_checksum_CFLAGS = $(TESTS_CFLAGS) $(libglnx_cflags)
tests_test_checksum_LDADD = $(TESTS_LDADD)

tests_test_libarchive_import_SOURCES = tests/test-libarchive-import.c
tests_test_libarchive_import_CFLAGS = $(TESTS_CFLAGS) $(libglnx_cflags) $(OT_DEP_LIBARCHIVE_CFLAGS)
tests_test_libarchive_import_LDADD = $(TESTS_LDADD) $(OT_DEP_LIBARCHIVE_LIBS)

tests_test_keyfile_utils_CFLAGS = $(TESTS_CFLAGS)
tests_test_keyfile_utils_LDADD = $(TESTS_LDADD)

tests_test_ot_opt_utils_CFLAGS = $(TESTS_CFLAGS)
tests_test_ot_opt_utils_LDADD = $(TESTS_LDADD)

tests_test_ot_tool_util_CFLAGS = $(TESTS_CFLAGS)
tests_test_ot_tool_util_LDADD = $(TESTS_LDADD)

tests_test_lzma_SOURCES = src/libostree/ostree-lzma-common.c src/libostree/ostree-lzma-compressor.c \
	src/libostree/ostree-lzma-decompressor.c tests/test-lzma.c
tests_test_lzma_CFLAGS = $(TESTS_CFLAGS) $(OT_DEP_LZMA_CFLAGS)
tests_test_lzma_LDADD = $(TESTS_LDADD) $(OT_DEP_LZMA_LIBS)

tests_test_gpg_verify_result_SOURCES = \
	src/libostree/ostree-gpg-verify-result-private.h \
	tests/test-gpg-verify-result.c
tests_test_gpg_verify_result_CFLAGS = $(TESTS_CFLAGS) $(OT_INTERNAL_GPGME_CFLAGS)
tests_test_gpg_verify_result_LDADD = $(TESTS_LDADD) $(OT_INTERNAL_GPGME_LIBS)

EXTRA_DIST += \
	tests/libostreetest.h \
	tests/libtest.sh \
	tests/gpg-verify-data/README.md \
	$(NULL)

tests/libreaddir-rand.so: Makefile
	$(AM_V_GEN) ln -fns ../.libs/libreaddir-rand.so tests
ALL_LOCAL_RULES += tests/libreaddir-rand.so
CLEANFILES += tests/libreaddir-rand.so tests/ostree-symlink-stamp \
		tests/ostree-prepare-root-symlink-stamp tests/ostree-remount-symlink-stamp \
		tests/rofiles-fuse-symlink-stamp tests/ostree
CLEANFILES += tests/ostree-prepare-root tests/ostree-remount tests/rofiles-fuse

tests/%-symlink-stamp: % Makefile
	$(AM_V_GEN) set -e; \
	lt_bin=`cd $(top_builddir) && ./libtool --mode=execute echo $*`; \
	if test "$${lt_bin}" = "$*"; then \
		real_bin=$(abs_top_builddir)/$*; \
	else \
		real_bin="$${lt_bin}"; \
	fi; \
	ln -sf "$${real_bin}" tests/$*; \
	touch $@

# Unfortunately the glib test data APIs don't actually handle
# non-recursive Automake, so we change our code to canonically look
# for tests/ which is just a symlink when installed.
if ENABLE_INSTALLED_TESTS
install-test-data-file-path-hack:
	if test -L $(DESTDIR)$(installed_testdir)/tests; then \
	  rm $(DESTDIR)$(installed_testdir)/tests; \
	fi
	ln -s . $(DESTDIR)$(installed_testdir)/tests
INSTALL_DATA_HOOKS += install-test-data-file-path-hack
endif
